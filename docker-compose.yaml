services:
  backend:
    build:
      context: ./backend
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    environment:
      - DB_HOST=db  # Override DB_HOST to use the service name instead of localhost
    command: ["3000", "localhost:8080"]
    depends_on:
      - db

  frontend:
    build:
      context: .
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app/frontend

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./proxy/conf.d:/etc/nginx/conf.d
      - ./proxy/ngnix.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  db:
    image: postgres:14
    container_name: DataBase
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network

# Make sure this networks section is properly defined
networks:
  app-network:
    driver: bridge

# Make sure this volumes section is properly defined
volumes:
  postgres_data:
